name: Build Janus Gateway and Extract janus-pp-rec

on:
  push:
    branches:
      - master  # 当推送到 main 分支时触发构建
  pull_request:
    branches:
      - master  # 在发起PR时也触发构建

jobs:
  build:
    runs-on: ubuntu-22.04  # 使用最新的 Ubuntu 环境进行构建
    strategy:
      matrix:
        compiler: [gcc, clang]
        datachannels: ["yes", "no"]
        libcurl: ["yes", "no"]
        include:
          - datachannels: "yes"
            libcurl: "yes"
            deps_from_src: "yes"
            janus_config_opts: ""
          - datachannels: "yes"
            libcurl: "no"
            deps_from_src: "no"
            janus_config_opts: "--disable-aes-gcm -disable-mqtt --disable-mqtt-event-handler --disable-turn-rest-api --disable-sample-event-handler"
          - datachannels: "no"
            libcurl: "yes"
            deps_from_src: "no"
            janus_config_opts: "--disable-aes-gcm -disable-mqtt --disable-mqtt-event-handler --disable-data-channels"
        exclude:
          - datachannels: "no"
            libcurl: "no"
    env:
        CC: ${{ matrix.compiler }}
        
    steps:
    # Step 1: 检出代码
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: 安装依赖
    - name: Install dependencies
      run: >
        sudo apt-get update && sudo apt-get --no-install-recommends -y install
        autoconf
        cmake
        duktape-dev
        gtk-doc-tools
        libavcodec-dev
        libavformat-dev
        libavutil-dev
        libcollection-dev
        libconfig-dev
        libevent-dev
        libglib2.0-dev
        libgirepository1.0-dev
        liblua5.3-dev
        libjansson-dev
        libmicrohttpd-dev
        libmount-dev
        libnanomsg-dev
        libogg-dev
        libopus-dev
        librabbitmq-dev
        libsofia-sip-ua-dev
        libssl-dev
        libtool
        libvorbis-dev
        ninja-build
        openssl
    - name: setup additional dependencies from apt
      if: ${{ matrix.deps_from_src == 'no' }}
      run: >
        sudo apt-get --no-install-recommends -y install
        libnice-dev
        libsrtp2-dev
        libusrsctp-dev
        libwebsockets-dev
    - name: install libcurl from apt
      if: ${{ matrix.libcurl == 'yes' }}
      run: sudo apt-get --no-install-recommends -y install libcurl4-openssl-dev
    - name: setup python
      if: ${{ matrix.deps_from_src == 'yes' }}
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: 'x64'        
    - name: install python packages
      if: ${{ matrix.deps_from_src == 'yes' }}
      run: pip install wheel meson
      
    - name: setup libnice from sources
      if: ${{ matrix.deps_from_src == 'yes' }}
      run: |
        git clone --depth 1 --quiet -b master https://gitlab.freedesktop.org/libnice/libnice.git libnice
        pushd libnice
        if [ $CC = clang ]; then LNICE_CFLAGS="-Wno-cast-align"; fi;
        meson setup -Dprefix=/usr -Dlibdir=lib -Dc_args="$LNICE_CFLAGS" -Ddebug=false -Doptimization=0 -Dexamples=disabled -Dgtk_doc=disabled -Dgupnp=disabled -Dgstreamer=disabled -Dtests=disabled build
        ninja -C build
        sudo ninja -C build install    
        
    # Step 3: 编译 Janus Gateway
    - name: Compile Janus Gateway
      run: |
        # 克隆 Janus Gateway 项目（如果未提前在 GitHub 上克隆）
        git clone https://github.com/meetecho/janus-gateway.git
        cd janus-gateway
        
        # 运行自动生成工具
        ./autogen.sh
        
        # 配置并编译
        ./configure
        make

    # Step 4: 查找并提取 janus-pp-rec 文件
    - name: Find and upload janus-pp-rec file
      run: |
        # 查找 janus-pp-rec 文件
        find . -type f -name "janus-pp-rec" > janus-pp-rec-path.txt
        
        # 将 janus-pp-rec 文件路径输出到 GitHub Actions 日志
        cat janus-pp-rec-path.txt
        
        # 上传 janus-pp-rec 文件作为构建产物
        if [ -f "$(cat janus-pp-rec-path.txt)" ]; then
          cp "$(cat janus-pp-rec-path.txt)" ./janus-pp-rec
        fi

    # Step 5: 上传构建的 janus-pp-rec 文件
    - name: Upload janus-pp-rec artifact
      uses: actions/upload-artifact@v3
      with:
        name: janus-pp-rec
        path: ./janus-pp-rec
